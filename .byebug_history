continue
@workout_log.user
@workout_log
continue
params
exit
self.longest_recovery_duration
self.average_recovery_duration
self.total_recovery_points
self.favorite_recovery
self.user_recovery_logs
self.total_recovery_duration
self
@user
exit
user_params
exit
params[:name]
session[:name]
        session[:name] = params[:name]
params[:name]
params
session[:username]
exit
exot
self
Workout.all
total_workout_logs
exit
user_recovery_logs
user_recovery_points
exit
user_workout_logs >= 1
WorkoutLog.all.select {|workout| workout.user_id == self.id}.count
WorkoutLog.all.select {|workout| workout.user_id == self.id}
user_workout_logs
exit
user.name
user = User.find(id)
User.find(id) = user
user_id = _
User.find(id)
id = @assessment.user_id
id = _
@assessment.user_id
id = 
@assessment.user_id
@assessment
exit
@user.assessments.map do |a| a.health_goal end
@user.assessments.each do |a| a.health_goal end
@user.assessments.each do |a| a.heath_goal end
@user.assessments.each do |a|
@user.assessments.health_goal
@user.assessments
@user
exit
@user.assessments
@user
